security:
  firewalls:
    dev:
      pattern:  ^/(_(profiler|wdt)|css|images|js)/
      security: false

    restricted_area:
      pattern:          ^/
      anonymous:        ~
      provider:         multiples
      imag_ldap:        ~
      # alternative configuration
      # imag_ldap:
      #   login_path:   /ninja/login
      logout:
        path:           /logout
        target:         /

  providers:
    multiples:
      chain:
        providers: [in_memory, ldap]
    in_memory:
      memory:
        users: 
          diishadmin: { password: 74913f5cd5f61ec0bcfdb775414c2fb3d161b620, roles: [ 'ROLE_DIISH_ADMIN' ] }
    ldap:
      id: imag_ldap.security.user.provider

  encoders:
    Symfony\Component\Security\Core\User\User:
      algorithm: sha1
      iterations: 1
      encode_as_base64: false
    IMAG\LdapBundle\User\LdapUser: plaintext

  access_control:
    - { path: ^/login,          roles: IS_AUTHENTICATED_ANONYMOUSLY }
    - { path: ^/,               roles: IS_AUTHENTICATED_FULLY }
    - { path: ^/scomdis,        roles: ROLE_SCOMDIS_USER }

  role_hierarchy:
    ROLE_DIISH_ADMIN: [ROLE_SCOMDIS_ADMIN]
    ROLE_SCOMDIS_ADMIN: [ROLE_SCOMDIS_USER]
        
imag_ldap:
  client:
    host: %imag_ldap_client_host%
    port: %imag_ldap_client_port%
#    version: 3 # Optional
    username: %imag_ldap_client_username%
    password: %imag_ldap_client_password%
#    network_timeout: 10 # Optional
#    referrals_enabled: true # Optional
#    bind_username_before: true # Optional

  user:
    base_dn: OU=ICT,DC=moh,DC=gov,DC=dm
#    filter: (&(foo=bar)(ObjectClass=Person)) #Optional
    filter: (&(ObjectClass=Person))
    name_attribute: sAMAccountName
    attributes: ['displayname', 'userprincipalname']
  role:
    base_dn: CN=Users,DC=moh,DC=gov,DC=dm
#    filter: (ou=group) #Optional
    name_attribute: cn
    user_attribute: member
    user_id: dn

